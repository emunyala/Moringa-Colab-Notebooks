{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Python Programming: Data Types","provenance":[{"file_id":"1Ngz5-1vRHH7zz8fsEqLo05tPTN1mS1S8","timestamp":1626931115053}],"collapsed_sections":["Fti179OmKM7c","UxdDFPQKz3NS","-BkSbASJUdKQ","a_8-Y8pFUfZ4","zH4fP7JMUqPG","A5_RAp55UkF6","s547kw_RlMAo","lgNykfkVlPAq","-HTYwkHal6e7","KyVOjrcMr4wI","eib75N_EnVqp","1x6Hvs-jrru7"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"qWBvvuvk0Svi"},"source":["<font color=\"green\">*To start working on this notebook, or any other notebook that we will use in the Moringa Data Science Course, we will need to save our own copy of it. We can do this by clicking File > Save a Copy in Drive. We will then be able to make edits to our own copy of this notebook.*</font>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"g4atfIoY1BjY"},"source":["# Python Programming: Data Types"]},{"cell_type":"markdown","metadata":{"id":"Fti179OmKM7c"},"source":["## 1.1 Introduction"]},{"cell_type":"markdown","metadata":{"id":"_Kl5unZ9KPIY"},"source":["There are many different data types in Python. These data types can also be referred to as types of objects. We can start with the most common object types: strings, integers and floats. Anytime you write words (text) in Python, you're using character strings (strings for short). The most common numbers, on the other hand, are integers (e.g. -1, 0, 100) and floats, which represent real numbers (e.g. 3.14, -42.0)."]},{"cell_type":"markdown","metadata":{"id":"F8zU7otKNuU3"},"source":["The following are examples of values with different data types;"]},{"cell_type":"code","metadata":{"id":"aLU0ZCM4KKMZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626931149226,"user_tz":-180,"elapsed":11,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"9c8522ff-1fd3-4c6a-870c-b848af924c4a"},"source":["# Example 1\n","# Integer Data Type\n","#\n","55"],"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["55"]},"metadata":{"tags":[]},"execution_count":1}]},{"cell_type":"code","metadata":{"id":"dm_ofqvwPQuP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626931170400,"user_tz":-180,"elapsed":370,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"915c3982-5a26-45ce-abb4-1a5e5c0b16ea"},"source":["# Example 2\n","# Float Data Type\n","#\n","3.142"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.142"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"Vjla31TDQg4R","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1626931174140,"user_tz":-180,"elapsed":377,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"0ca498c8-581e-4860-9a75-34e086407df8"},"source":["# Example 3\n","# String Data Type\n","#\n","\"Moringa Data Science\" "],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Moringa Data Science'"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"uqmC6vfr24_f"},"source":["### <font color=\"green\">1.1 Challenges </font>\n"]},{"cell_type":"code","metadata":{"id":"IpyXzkyYRnJ1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626931194371,"user_tz":-180,"elapsed":359,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"0f5a2a6d-5802-471a-af5b-6ab229d0e81c"},"source":["# Challenge 1\n","# Write a value with an Integer data type \n","# \n","2"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"fTkeiMm6Rrhc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626931211420,"user_tz":-180,"elapsed":435,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"c6725d36-7c43-4726-ae78-3effb696659b"},"source":["# Challenge 2 \n","# Write any value with a Float Data Type \n","# \n","22.445"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["22.445"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"-yxfZtWqRuoA","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1626931230297,"user_tz":-180,"elapsed":347,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"4b3f558f-40c6-4492-ed22-c2288d37749a"},"source":["# Challenge 3\n","# Write any value with a String Data Type \n","# \n","\"Pokemon anime\""],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Pokemon anime'"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"UxdDFPQKz3NS"},"source":["## 1.2 Finding Out Types"]},{"cell_type":"markdown","metadata":{"id":"sgBUpOEqRe8d"},"source":["We can get Python to tell us the type of an expression by using the built-in type() function. We'll notice that Python refers to integers as int, floats as float, and character strings as str."]},{"cell_type":"code","metadata":{"id":"GQZq_V9NS09i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626933982872,"user_tz":-180,"elapsed":337,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"863d3247-8548-454e-d9a8-ada1d6c3c950"},"source":["# Example 1\n","# Finding out the type of 55\n","#\n","type(55)"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"mKoaAXlNS8pt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626933987501,"user_tz":-180,"elapsed":7,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"d3b49878-8936-4ea7-9466-03e33df1a586"},"source":["# Example 2\n","# Finding out the type of 3.142\n","#\n","type(3.142)"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"55FxpuwtS8So","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626933992904,"user_tz":-180,"elapsed":16,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"d576a718-4347-4362-fec9-f8bd7a9b8cca"},"source":["# Example 3\n","# Finding out the type of \"Moringa Data Science\"\n","#\n","type(\"Moringa Data Science\")"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"gqLkQCti2_as"},"source":["### <font color=\"green\">1.2 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"9aeJPHk5RJW2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934056240,"user_tz":-180,"elapsed":331,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"65a7a079-c32b-4eb9-c7eb-e14735e05c18"},"source":["# Challenge 4 \n","# Now lets find out the type of our value in Challenge #1\n","#\n","type(2)"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"xpxRzyfHT_VC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934051608,"user_tz":-180,"elapsed":336,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"c231f3b2-1a60-4356-848d-e53556cafaff"},"source":["# Challenge 5\n","# What about the type of our value in Challenge #2\n","# \n","type(22.445)"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"JSTdIHXdUErB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934084690,"user_tz":-180,"elapsed":354,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"e6f1bdbb-abda-41a5-eaaa-7c7062dc6b13"},"source":["# Challenge 6\n","# What about the type of our value in Challenge #3\n","#\n","type(\"Pokemon anime\")"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"3A6nP_-XpcTA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934099196,"user_tz":-180,"elapsed":370,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"a0493e66-a94d-447b-e982-2f7d4922979f"},"source":["# Challenge 7 \n","# What is the data type of the result of: 16 / 4?\n","#\n","type(16/4)"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"_MC1ALIKpnyA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934126051,"user_tz":-180,"elapsed":343,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"b86d1af0-d455-4bc8-e8ed-ab4efb25c751"},"source":["# Challenge 8 \n","# What is the type of the result of: 6 // 2? (Note the double slash //.)\n","#\n","type(6 //  2)"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"dDF33m3swR-Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934142210,"user_tz":-180,"elapsed":331,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"f31c9c45-55e6-4cb5-d995-a38e116bcb24"},"source":["# Challenge 9\n","# What do you think is the output of type(a)? Run this cell and check\n","# \n","a = \"Learning Data Science is Easy\" \n","a = 3 \n","type(a)"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"2GaZ0Eggw7Iu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934742799,"user_tz":-180,"elapsed":336,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"4794f01d-f4cc-4c47-ff84-e51b687a84b2"},"source":["# Challenge 10\n","# What do you think is the output of this cell? \n","# Think about it then run it.\n","#\n","type(3.2) == float "],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"-BkSbASJUdKQ"},"source":["## 1.3  Integers"]},{"cell_type":"markdown","metadata":{"id":"JyxHhUBWUrbg"},"source":[" Integers can be negative or positive numbers:"]},{"cell_type":"code","metadata":{"id":"BMEZZkF-Gv4s","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934759045,"user_tz":-180,"elapsed":352,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"c8122946-fb1b-4e29-a6b2-fd7506a7e906"},"source":["# Example 1\n","# Again, we can verify whether this is the case by using the type() function\n","#\n","type(-300)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"Z6xx7moLqa2B"},"source":["### <font color = \"green\">1.3 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"dcOMS1Ywn2MG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934774354,"user_tz":-180,"elapsed":329,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"0aa45bce-485e-4bf9-a291-0c48e42e1b11"},"source":["# Challenge 1\n","# What happens when we verify a positive number i.e 43\n","#\n","type(43)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"H0Ws1Ez1HqoT"},"source":["# Challenge 2\n","# Let's verify zero below \n","# \n","OUR CODE GOES HERE"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"a_8-Y8pFUfZ4"},"source":["## 1.4 Floats"]},{"cell_type":"markdown","metadata":{"id":"KK5QqqUFIorK"},"source":["Floats represent real numbers; they also include \"numbers with decimals\". We can now test some examples with the type() function"]},{"cell_type":"code","metadata":{"id":"qLrhOz6eIpZ7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934786467,"user_tz":-180,"elapsed":350,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"42e7fe09-0207-4787-9bbb-e2299f45dd70"},"source":["# Example 1\n","# Let's verify 1.0\n","# \n","type(1.0)"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"Uc1Dx2gDqlQb"},"source":["###<font color=\"green\"> 1.4 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"AkXuR5UXoa4u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934800054,"user_tz":-180,"elapsed":325,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"8130afcf-2257-41f7-f2e5-e85279d10b2f"},"source":["# Challenge 1 \n","# Let's now verify 0.7\n","#\n","type(0.7)"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"W-dT0-3WWx7z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934813528,"user_tz":-180,"elapsed":341,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"68bbed77-fa02-418e-8015-652f3ee00112"},"source":["# Challenge 2\n","# Verifying the type of 0.53\n","# \n","type(0.53)"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"markdown","metadata":{"id":"zH4fP7JMUqPG"},"source":["## 1.5 Boolean"]},{"cell_type":"markdown","metadata":{"id":"Bfvyjf_YmT-w"},"source":["Boolean is another important type in Python. An object of type Boolean can take on one of two values: True or False:\n","\n"]},{"cell_type":"code","metadata":{"id":"pLiD-enCmSyO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934825578,"user_tz":-180,"elapsed":340,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"0c410c02-a5f3-438f-fe11-46e7f7482a73"},"source":["# Example 1\n","# Let's run this cell and see what happens\n","#\n","True"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"irtYN0ZZmv5Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934827860,"user_tz":-180,"elapsed":513,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"29ae52fb-88e6-44c2-d6ca-82f8eb237907"},"source":["# Example 2\n","# Let's also run this cell and see what happens\n","#\n","False"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"u3G52jpj2veu"},"source":["### <font color=\"green\">1.5 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"graRe9NCmioG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934840099,"user_tz":-180,"elapsed":337,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"112ba1ae-3553-4124-8a00-1e0641fe971a"},"source":["# Challenge 1 \n","# What happens when we run 'true' in this cell\n","#\n","True"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"MuyXiaUPmz9U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934851070,"user_tz":-180,"elapsed":324,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"799b2336-ad29-4834-d3c4-14173d6ea91d"},"source":["# Challenge 2\n","# What about what happens when we run 'false' in this cell\n","#\n","False"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"10qmsXWgm5Hk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934877468,"user_tz":-180,"elapsed":343,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"822ec8ba-7b09-4a7c-98db-8d6f38d4d943"},"source":["# Challenge 3\n","# Let's also find out type of False in this cell\n","#\n","type(False)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bool"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"A5_RAp55UkF6"},"source":["## 1.6 Conversion of Types"]},{"cell_type":"markdown","metadata":{"id":"Ajd9s536Ul66"},"source":["We can change the type of the object in Python; this is called typecasting. For example, we can convert an integer into a float (e.g. 2 to 2.0)."]},{"cell_type":"code","metadata":{"id":"yJCPR5BEXp3G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934885191,"user_tz":-180,"elapsed":338,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"a5427eef-9fdd-4cbd-eade-8a6e320a0748"},"source":["# Example 1 \n","# Let's first verify that this is an integer by running this cell. \n","#\n","type(2) "],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"markdown","metadata":{"id":"s547kw_RlMAo"},"source":["### 1.6a. Converting integers to floats\n"]},{"cell_type":"code","metadata":{"id":"4mP_uTVYkoKn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934889465,"user_tz":-180,"elapsed":332,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"9236d2fe-5dac-4f6e-a8d2-8da9bd24ce07"},"source":["# Example 1\n","# Let's now convert integer 2 to a float and check its type\n","#\n","type(float(2)) "],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"YWhO9m4mlAvg"},"source":["When we convert an integer into a float, we don't really change the value (i.e., the significand) of the number. However, if we cast a float into an integer, we could potentially lose some information. For example, if we cast the float 1.1 to integer we will get 1 and lose the decimal information (i.e., 0.1):"]},{"cell_type":"code","metadata":{"id":"ghNEvJErk4Vu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934892295,"user_tz":-180,"elapsed":336,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"a300ac9c-4234-4bf7-d832-84e8f1018d91"},"source":["# Example 2\n","# Casting 1.1 to integer will result in loss of information\n","#\n","int(1.1) "],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"lgNykfkVlPAq"},"source":["### 1.6b. Converting from strings to integers or floats\n"]},{"cell_type":"markdown","metadata":{"id":"rkSTFCOelV-y"},"source":["Sometimes, we can have a string that contains a number within it. If this is the case, we can cast that string that represents a number into an integer using int():\n","\n"]},{"cell_type":"code","metadata":{"id":"qK1OrMJYlSwk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626934906788,"user_tz":-180,"elapsed":323,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"7142d9e8-0055-4992-8791-97c62758602b"},"source":["# Example 1\n","# Let's convert a string into an integer\n","#\n","int('1')"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"9ixyl-vAljSG","executionInfo":{"status":"ok","timestamp":1626935970278,"user_tz":-180,"elapsed":385,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}}},"source":["# Example 2\n","# But if we try to do so with a string that is not a perfect match for a number, we will get an error. \n","# \n","#int('1 or 2 people')"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"1hR-LBq-lvCw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626935974250,"user_tz":-180,"elapsed":318,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"e82a99af-21c0-4a2d-9259-64fe817dc0df"},"source":["# Example 3\n","# We can also convert strings containing floating point numbers into float objects:\n","#\n","float('1.2') "],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.2"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"markdown","metadata":{"id":"-HTYwkHal6e7"},"source":["### 1.6c. Converting numbers to strings\n"]},{"cell_type":"markdown","metadata":{"id":"gLlTlzYml8Fu"},"source":["If we can convert strings to numbers, it is only natural to assume that we can convert numbers to strings, right?\n","\n"]},{"cell_type":"code","metadata":{"id":"XjEcrrz-mByz","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1626935983486,"user_tz":-180,"elapsed":325,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"9735cd7c-9e1d-4020-af2f-0f740d2825b0"},"source":["# Example 1\n","# Let's Convert an integer to a string\n","#\n","str(1)"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1'"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"markdown","metadata":{"id":"KyVOjrcMr4wI"},"source":["#### <font color=\"green\">1.6c Challenges</font>"]},{"cell_type":"code","metadata":{"id":"Rk4YzQRGmH87","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1626936009218,"user_tz":-180,"elapsed":319,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"48572691-6a57-4092-db2d-54af61249a9b"},"source":["# Challenge 1\n","# And there is no reason why we shouldn't be able to make floats into strings as well:\n","# Converting a float 1.2 to a string\n","#\n","str(1.2)"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1.2'"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"fnw2YsM8vswc","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1626936028007,"user_tz":-180,"elapsed":318,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"24001b06-4e96-4af1-dfee-1d411a5833fa"},"source":["# Challenge 2\n","# How do you convert a digit 6/4 into a string?\n","# \n","str(6/4)"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1.5'"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"eib75N_EnVqp"},"source":["### 1.6d. Boolean Casting\n","We can cast boolean objects to other data types. If we cast a boolean with a value of True to an integer or float we will get a one. If we cast a boolean with a value of False to an integer or float we will get a zero. Similarly, if we cast a 1 to a Boolean, you get a True. And if we cast a 0 to a Boolean we will get a False. Let's give it a try:\n","\n"]},{"cell_type":"code","metadata":{"id":"ggrd56z2rd5u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626936083129,"user_tz":-180,"elapsed":333,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"08b8ba7d-61ae-476e-8305-a98af6d03a84"},"source":["# Example 1 \n","# Let's cast 1 to a Boolean \n","bool(1)"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"1x6Hvs-jrru7"},"source":["#### <font color=\"green\">1.6d Challenges</font>"]},{"cell_type":"code","metadata":{"id":"JjfxTMb1n_9z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626936100620,"user_tz":-180,"elapsed":363,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"8262ae41-44ea-45f5-ee3a-96e80ab52029"},"source":["# Challenge 1\n","# Let's convert the value of True to an integer\n","# \n","int(True)"],"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"code","metadata":{"id":"1x5bcRVfoNHW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626936114362,"user_tz":-180,"elapsed":336,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"386b8081-8334-48b6-d897-a0ca8980e436"},"source":["# Challenge 2\n","# What happens when we cast a 0 to a Boolean?\n","# \n","bool(0)"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"VrCxNoqXo03X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626936136869,"user_tz":-180,"elapsed":380,"user":{"displayName":"Eliud Munyala","photoUrl":"","userId":"09572496916808459189"}},"outputId":"34d8bf0c-644a-4344-d263-f3d10d2d7b2d"},"source":["# Challenge 3 \n","# Let's cast a boolean with a value of True to an integer\n","# \n","int(bool(True))"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":44}]}]}